---
# tasks file for edjruntime
       - name: Install docker
         shell: |
           sudo apt-get remove docker docker-engine docker.io containerd runc -y
           sudo apt-get update
           sudo apt-get install  apt-transport-https ca-certificates curl gnupg-agent software-properties-common -y &&
           curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - && sudo add-apt-repository \
             "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
               $(lsb_release -cs) \
                   stable" &&
           sudo apt-get update &&
           sudo apt-get install docker-ce docker-ce-cli containerd.io -y
       - name: python packages
         shell: |
           sudo add-apt-repository -r ppa:jonathonf/python-3.8
           sudo apt update
           sudo apt install python3.8 -y
           sudo rm /usr/bin/python
           sudo ln -s /usr/bin/python3 /usr/bin/python
       - name: Install expect package
         package:
          name: expect
          state: latest
       - name: python install for pip
         shell: curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && python get-pip.py --force-reinstall
       - name: docker-py
         pip:
          name: docker-py
       - name: github login
         shell: echo 88ab26f0285a432b894fe2a5c121fb27b12a4658Â | docker login https://docker.pkg.github.com -u sriedjx --password-stdin
       - name: edjcli binary
         shell: wget "https://docs.google.com/uc?export=download&id=13pWZgKU9hbR1nhKv-laHKetfesCKTIUL" -O edjx.zip 
       - name: install unzip
         package:
           name: unzip
           state: latest
       - name: Extract edjx.zip to /usr/local/bin
         unarchive:
          src: edjx.zip
          dest: ./
       - name: copy edjx binary to /usr/local/bin
         copy:
           src: ./conf/edjx
           dest: /usr/local/bin
           mode: 0744 
       - name: init
         shell: edjx config init
       - name: edjx login
         shell:  edjx login -u suman+2@edjx.io -p Hello@123
       - name: node register
         shell: |
          spawn ./conf/node-register.sh
          expect "Save node private key to:"
          send -- "conf/runtime/certificates/private.pem\n"
          expect "Save node public key to:"
          send -- "conf/runtime/certificates/public.pem\n"
          expect "Save node certificate to:"
          send -- "conf/runtime/certificates/cert.pem\n"
          expect "Save node configuration to:"
          send -- "conf/runtime/.env_user\n"
          expect "IP Address for the node to listen on:"
          send -- "echo $(wget -q -O - ipinfo.io/ip)\n"
          exit 0
         args:
          executable: /usr/bin/expect
